<?php

// Model Namespacing.
namespace App\Models;

// Facades.
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

// Traits.
use Spatie\MediaLibrary\MediaCollections\File;
use Spatie\MediaLibrary\MediaCollections\Models\Media;
use Spatie\MediaLibrary\HasMedia;
use Spatie\MediaLibrary\InteractsWithMedia;
use Spatie\Permission\Traits\HasRoles;

// Scopes.
use App\Scopes\PublishedScope;

class {{crudName}} extends Model implements HasMedia
{
    /* Traits */
    use HasFactory;
    use HasRoles;
    use InteractsWithMedia;

    /**
    * The table associated with the model.
    *
    * @var string
    protected $table = 'foobar';
    */

    /**
    * The attributes that are mass assignable.
    *
    * @var array
    */
    protected $fillable = [
    ];

    /**
    * The attributes that should be hidden for arrays.
    *
    * @var array
    */
    protected $hidden = [
        'id',
    ];

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
    ];

    /**
    * The attributes that should be mutated to dates.
    *
    * @var array
    */
    protected $dates = [
    ];

    /**
    * Model relations.
    *
    */

    /**
    * Model functions.
    *
    */
    protected static function boot()
    {
        parent::boot();

        return static::addGlobalScope(new PublishedScope);
    }

    /**
    * Register the files into the database with the given collection.
    *
    */
    public function registerMediaCollections(): void
    {
        $this->addMediaCollection('collectionName')
             ->singleFile();
    }

    /**
    * Convert the file to given height and width.
    *
    */
    public function registerMediaConversions(Media $media = null): void
    {
        $this->addMediaConversion('{{crudNameSingularSnakeCase}}Image')
             ->withResponsiveImages()
             ->performOnCollections('{{crudNameSingularSnakeCase}}Image');
        }
    }

}
